<% layout("/layouts/boilerplate") %>

<div class="container-fluid px-4">
  <!-- Category Filters -->
  <div class="filters-section mb-4">
    <div class="scrollable-tabs-container">
      <div class="left-arrow">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M15.75 19.5 8.25 12l7.5-7.5"
          />
        </svg>
      </div>
      <div class="filter-container">
        <a class="filter-item active" href="/listings">
          <div class="filter-icon"><i class="fa-solid fa-house"></i></div>
          <span>All</span>
        </a>
        <a class="filter-item" href="/listings/filter/Trending">
          <div class="filter-icon"><i class="fa-solid fa-fire"></i></div>
          <span>Trending</span>
        </a>
        <a class="filter-item" href="/listings/filter/Iconic cities">
          <div class="filter-icon">
            <i class="fa-solid fa-mountain-city"></i>
          </div>
          <span>Iconic cities</span>
        </a>
        <a class="filter-item" href="/listings/filter/Mountains">
          <div class="filter-icon"><i class="fa-solid fa-mountain"></i></div>
          <span>Mountains</span>
        </a>
        <a class="filter-item" href="/listings/filter/Castles">
          <div class="filter-icon">
            <i class="fa-brands fa-fort-awesome"></i>
          </div>
          <span>Castles</span>
        </a>
        <a class="filter-item" href="/listings/filter/Amazing pools">
          <div class="filter-icon">
            <i class="fa-solid fa-person-swimming"></i>
          </div>
          <span>Amazing pools</span>
        </a>
        <a class="filter-item" href="/listings/filter/Rooms">
          <div class="filter-icon"><i class="fa-solid fa-bed"></i></div>
          <span>Rooms</span>
        </a>
        <a class="filter-item" href="/listings/filter/Camping">
          <div class="filter-icon"><i class="fa-solid fa-campground"></i></div>
          <span>Camping</span>
        </a>
        <a class="filter-item" href="/listings/filter/Farms">
          <div class="filter-icon"><i class="fa-solid fa-cow"></i></div>
          <span>Farms</span>
        </a>
        <a class="filter-item" href="/listings/filter/Arctic">
          <div class="filter-icon"><i class="fa-regular fa-snowflake"></i></div>
          <span>Arctic</span>
        </a>
        <a class="filter-item" href="/listings/filter/Domes">
          <div class="filter-icon"><i class="fa-solid fa-igloo"></i></div>
          <span>Domes</span>
        </a>
        <a class="filter-item" href="/listings/filter/Boats">
          <div class="filter-icon"><i class="fa-solid fa-ship"></i></div>
          <span>Boats</span>
        </a>
      </div>

      <div class="right-arrow active">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          strokeWidth="{1.5}"
          stroke="currentColor"
          className="w-6 h-6"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            d="m8.25 4.5 7.5 7.5-7.5 7.5"
          />
        </svg>
      </div>
    </div>

    <div class="tax-toggle-container">
      <div class="form-check form-switch">
        <input
          class="form-check-input"
          type="checkbox"
          role="switch"
          id="taxToggle"
        />
        <label class="form-check-label" for="taxToggle"
          >Display total after taxes</label
        >
      </div>
    </div>
  </div>

  <!-- Listings Grid -->
  <div class="listings-grid">
    <% for(let listing of allListings) { %>
    <a href="/listings/<%=listing._id%>" class="listing-card-link">
      <div class="listing-card">
        <div class="listing-image">
          <img src="<%=listing.image.url%>" alt="<%=listing.title%>" />
        </div>
        <div class="listing-details">
          <h3 class="listing-title"><%= listing.title %></h3>
          <div class="listing-price">
            <span class="price"
              >â‚¹<%= listing.price ? listing.price.toLocaleString("en-IN") :
              "N/A" %></span
            >
            <span class="per-night">/ night</span>
            <span class="tax-info">+18% GST</span>
          </div>
        </div>
      </div>
    </a>
    <% } %>
  </div>
</div>

<style>
  /* Filters Section */
  .filters-section {
    position: sticky;
    top: 0;
    background: white;
    z-index: 100;
    padding: 1rem 0;
    border-bottom: 1px solid #eee;
  }

  .scrollable-tabs-container {
    display: flex;
    align-items: center;
    gap: 1rem;
    position: relative;
  }

  .filter-container {
    display: flex;
    gap: 2rem;
    overflow-x: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding: 0.5rem 0;
  }

  .filter-container::-webkit-scrollbar {
    display: none;
  }

  .filter-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    color: #666;
    min-width: 56px;
    transition: all 0.3s ease;
  }

  .filter-item:hover {
    color: #222;
    transform: translateY(-2px);
  }

  .filter-item.active {
    color: #222;
  }

  .filter-icon {
    font-size: 1.25rem;
    padding: 0.5rem;
    border-radius: 50%;
    background: #f8f9fa;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .filter-item:hover .filter-icon,
  .filter-item.active .filter-icon {
    background: #e9ecef;
    transform: scale(1.05);
  }

  .filter-item span {
    font-size: 0.875rem;
    white-space: nowrap;
  }

  .nav-arrow {
    background: white;
    border: 1px solid #ddd;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0;
    pointer-events: none;
  }

  .nav-arrow.active {
    opacity: 1;
    pointer-events: auto;
  }

  .nav-arrow:hover {
    background: #f8f9fa;
    transform: scale(1.1);
  }

  /* Tax Toggle */
  .tax-toggle-container {
    display: flex;
    justify-content: flex-end;
    padding: 0.5rem 0;
  }

  /* Listings Grid */
  .listings-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
    padding: 1rem 0;
  }

  .listing-card-link {
    text-decoration: none;
    color: inherit;
  }

  .listing-card {
    border-radius: 1rem;
    overflow: hidden;
    transition: transform 0.3s ease;
    background: white;
    height: 100%;
  }

  .listing-card:hover {
    transform: translateY(-4px);
  }

  .listing-image {
    position: relative;
    padding-top: 66.67%;
    overflow: hidden;
  }

  .listing-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .listing-card:hover .listing-image img {
    transform: scale(1.05);
  }

  .listing-details {
    padding: 1rem;
  }

  .listing-title {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: #222;
  }

  .listing-price {
    display: flex;
    align-items: baseline;
    gap: 0.25rem;
    color: #666;
  }

  .listing-price .price {
    font-weight: 600;
    color: #222;
  }

  .listing-price .per-night {
    font-size: 0.875rem;
  }

  .tax-info {
    font-size: 0.75rem;
    color: #666;
    display: none;
  }

  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .container-fluid {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .filter-container {
      gap: 1rem;
    }

    .listings-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: 1rem;
    }
  }

  @media (max-width: 576px) {
    .listings-grid {
      grid-template-columns: 1fr;
    }

    .filter-icon {
      width: 40px;
      height: 40px;
      font-size: 1rem;
    }

    .filter-item span {
      font-size: 0.75rem;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Tax Toggle Functionality
    const taxToggle = document.getElementById("taxToggle");
    const taxInfo = document.querySelectorAll(".tax-info");

    taxToggle.addEventListener("change", () => {
      taxInfo.forEach((info) => {
        info.style.display = taxToggle.checked ? "inline" : "none";
      });
    });

    // Filter Navigation
    const filterContainer = document.querySelector(".filter-container");
    const leftArrow = document.querySelector(".left-arrow");
    const rightArrow = document.querySelector(".right-arrow");
    const filterItems = document.querySelectorAll(".filter-item");

    // Arrow visibility management
    const updateArrowVisibility = () => {
      const isScrollable =
        filterContainer.scrollWidth > filterContainer.clientWidth;
      const isScrolledToStart = filterContainer.scrollLeft <= 20;
      const isScrolledToEnd =
        filterContainer.scrollLeft >=
        filterContainer.scrollWidth - filterContainer.clientWidth - 20;

      leftArrow.classList.toggle("active", isScrollable && !isScrolledToStart);
      rightArrow.classList.toggle("active", isScrollable && !isScrolledToEnd);
    };

    // Initialize arrow visibility
    updateArrowVisibility();

    // Scroll handlers
    leftArrow.addEventListener("click", () => {
      filterContainer.scrollBy({ left: -200, behavior: "smooth" });
    });

    rightArrow.addEventListener("click", () => {
      filterContainer.scrollBy({ left: 200, behavior: "smooth" });
    });

    filterContainer.addEventListener("scroll", updateArrowVisibility);
    window.addEventListener("resize", updateArrowVisibility);

    // Filter item active state
    const setActiveFilter = (filter) => {
      filterItems.forEach((item) => item.classList.remove("active"));
      filter.classList.add("active");
      localStorage.setItem("activeFilter", filter.getAttribute("href"));
    };

    filterItems.forEach((filter) => {
      filter.addEventListener("click", (e) => {
        e.preventDefault();
        setActiveFilter(filter);
        window.location.href = filter.getAttribute("href");
      });
    });

    // Restore active filter from localStorage
    const storedFilter = localStorage.getItem("activeFilter");
    if (storedFilter) {
      const activeFilter = document.querySelector(
        `.filter-item[href="${storedFilter}"]`
      );
      if (activeFilter) {
        setActiveFilter(activeFilter);
      }
    }

    // Smooth scrolling for filter container
    let isMouseDown = false;
    let startX;
    let scrollLeft;

    filterContainer.addEventListener("mousedown", (e) => {
      isMouseDown = true;
      startX = e.pageX - filterContainer.offsetLeft;
      scrollLeft = filterContainer.scrollLeft;
    });

    filterContainer.addEventListener("mouseleave", () => {
      isMouseDown = false;
    });

    filterContainer.addEventListener("mouseup", () => {
      isMouseDown = false;
    });

    filterContainer.addEventListener("mousemove", (e) => {
      if (!isMouseDown) return;
      e.preventDefault();
      const x = e.pageX - filterContainer.offsetLeft;
      const walk = (x - startX) * 2;
      filterContainer.scrollLeft = scrollLeft - walk;
    });
  });
</script>
